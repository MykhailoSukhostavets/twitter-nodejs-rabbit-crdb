version: '3'

services:
  crdb-0:
    container_name: crdb-0
    hostname: crdb-0
    ports:
      - '26257:26257'
      - '8080:8080'
    image: cockroachdb/cockroach:latest
    command: start-single-node --cluster-name=crdb-claster --logtostderr=WARNING --log-file-verbosity=WARNING --insecure
    networks:
      - app-network

  crdb-1:
    container_name: crdb-1
    hostname: crdb-1
    image: cockroachdb/cockroach:latest
    command: start --cluster-name=crdb-claster --logtostderr=WARNING --log-file-verbosity=WARNING --insecure --join=crdb-0
    depends_on:
      - crdb-0
    networks:
      - app-network

  crdb-2:
    container_name: crdb-2
    hostname: crdb-2
    image: cockroachdb/cockroach:latest
    command: start --cluster-name=crdb-claster --logtostderr=WARNING --log-file-verbosity=WARNING --insecure --join=crdb-0
    depends_on:
      - crdb-0
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.7.4
    networks:
      - app-network

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./worker:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    environment:
      - QUEUE=tasks
      - BD_LINK=postgresql://root@crdb-0:26257/defaultdb?sslmode=disable
      - RABBIT=amqp://rabbitmq
    links:
      - rabbitmq

  rest:
    build:
      context: ./rest
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - '3000:3000'
    volumes:
      - ./rest:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    environment:
      - QUEUE=tasks
      - BD_LINK=postgresql://root@crdb-0:26257/defaultdb?sslmode=disable
      - PORT=3000
      - RABBIT=amqp://rabbitmq
    links:
      - rabbitmq

networks:
  app-network:
    driver: bridge
